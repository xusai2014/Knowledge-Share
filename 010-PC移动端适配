
### 设备像素（device pixels）、设备独立像素、CSS像素、PPI、分辨率、逻辑像素，如何理解？

首先要理解物理像素（即显示器的最小物理单位，由三原色组成）即常说的屏幕分辨率，通常逻辑分辨率抽象上是指设备独立像素（独立于设备像素单位）纬度的分辨率。一个独立设备像素由若干个物理像素组成，操作系统设定的屏幕分辨率（即独立设备像素分辨率）。CSS像素是浏览器使用的像素单位，通常当网页缩放比例是100%时Css像素和设备独立像素等效，但是当页面进行百分比缩放时，当放大至200%时，一个CSS像素是4个设备独立像素。

- 设备像素可以对应到硬件参数体系。
- 设备对立像素是操作系统参数体系。
- CSS像素是软件应用参数体系。
- 分辨率是抽象定义，用于描述屏幕图像的精密度。比如设备分辨路、屏幕分辨率、逻辑分辨率等
- 设备分辨率（Device Resolution）PPI是每英寸的物理像素数，例如ppi = Math.sqrt(1125*1125 + 2436*2436) / 5.8。

CSS像素、设备独立像素均是逻辑像素的一种体现，我们通常会换算的像素比是设备像素和设备独立像素，通常称呼的逻辑像素也是设备独立像素，但是称呼不准确，需要信息对齐后再进行讨论。

#### window.devicePixelRatio所代表的像素比是什么呢？

1. 设备独立像素 / 设备像素 (网页未进行比例缩放时)
2. 设备独立像素 / CSS像素 = 设备独立像素 / 设备像素 * 缩放比例（网页进行比例缩放时）

例如 mac pro: 
1. 1440 * 900 （设备独立像素分辨率）系统设置 -> 显示器

2. 2560 × 1600 (设备像素分辨率)  关于本机 -> 显示器

3. 1440 * 1472 （某个网页CSS像素分辨率）window.devicePixelRatio = 2

4. 720 * 736 （某个网页放大200%的CSS像素分辨率）window.devicePixelRatio = 4


#### 深入到具体响应式设计方案？

例如对PC/M的RWD适配方案，需要做分辨率分析、用户分析、流量特征分析：
1. 分辨率分析

- 360 - 480(竖版手机)
- 不一定有 | >= 480 && < 768 (横版手机、小平板)
- 小流量 | >= 768 && < 992（普通平板，大概流量为3-4%）
- >= 992 && < 1280（大平板、小显示器、笔记本）
- >= 1280 && < 1440（普通显示器、普通笔记本）
- >= 1440 && < 1920（主流显示器）
- 不一定有 | > 1920（2k、4k 显示器）

UI设计规范：
- 360设计稿 - xs-new 
- 480设计稿 - sm-new
- 992设计稿 - min-laptop
- 1280设计稿 - laptop
- 1440设计稿 - lg

特殊，不常用断点

- 768设计稿 - pad
- 1920设计稿 - xl

断点技术方案：

- xs-new (0 - 479)  (竖版手机)
- min-pad (480 - 767)  (横版手机、小平板)
- sm-new (480 - 991)
- pad (768 - 991) （普通平板，大概流量为3-4%）
- min-laptop (992 - 1279)（大平板、小显示器、笔记本）
- laptop (1280 - ~)   (普通显示器、普通笔记本）
- lg     (1440 - ~)  (主流显示器）
- xl     (1920 - ~)   (2k、4k 显示器）



通常状况下我们所说的分辨率是设备独立像素概念下的分辨率，内容在分发过程中设备大小不一样因此采用RWD方式去适配但是具体到每个用户各个系统下像素比不同，例如：

- 操作系统修改设备独立像素导致设备像素比不同
- 操作系统修改缩放比例会导致设备像素比不同
- 网页缩放比例修改会导致设备独立像素和CSS像素比不同

最常见的比如，iphone系列适配：

- iPhone5 ：分辨率 320 * 568，物理像素 640 * 1136，@2x（倍率）
- iPhone6：分辨率 375 * 667，物理像素 750 * 1334，@2x
- iPhone6 Plus ：分辨率 414 *  736，物理像素1242 * 2208，@3x

因此需要做，如下适配：
- 高清适配，比如图片、文字等内容元素。
- 屏幕高度的首屏内容适配、弹层内容适配（避免内容撑开需使用滚动条进行更多内容查看）














